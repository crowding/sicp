#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 63 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 16 #"Source Code Pro\0"
0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 251 162 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 251 162 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 84 191 233 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 84 191 233 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 147 175 101 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 147 175 101 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 212 207 211 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 212 207 211 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 16 #"Source Code Pro\0"
0.0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1           0 1551 0 29 3 12 #"#lang racket"
0 0 25 29 1 #"\n"
0 0 18 3 79
(
 #"; for some reason, the picture language doesn't completely work from"
 #" neil/sicp,"
) 0 0 25 29 1 #"\n"
0 0 18 3 2 #"; "
0 0 18 3 2 #"as"
0 0 18 3 1 #" "
0 0 18 3 9 #"evidenced"
0 0 18 3 1 #" "
0 0 18 3 2 #"by"
0 0 18 3 11 #" the below:"
0 0 25 29 1 #"\n"
0 0 18 3 2 #"; "
0 0 18 3 1 #"("
0 0 18 3 5 #"paint"
0 0 18 3 2 #" ("
0 0 18 3 17 #"segments->painter"
0 0 18 3 2 #" ("
0 0 18 3 4 #"list"
0 0 18 3 2 #" ("
0 0 18 3 12 #"make-segment"
0 0 18 3 2 #" ("
0 0 18 3 9 #"make-vect"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 1 #" "
0 0 18 3 1 #"0"
0 0 18 3 2 #") "
0 0 18 3 1 #"("
0 0 18 3 9 #"make-vect"
0 0 18 3 1 #" "
0 0 18 3 8 #"1 1)))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 7 #"require"
0 0 25 3 2 #" ("
0 0 14 3 9 #"except-in"
0 0 25 3 2 #" ("
0 0 14 3 6 #"planet"
0 0 25 3 1 #" "
0 0 20 3 9 #"\"sicp.ss\""
0 0 25 3 2 #" ("
0 0 20 3 10 #"\"soegaard\""
0 0 25 3 1 #" "
0 0 20 3 10 #"\"sicp.plt\""
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 14 3 10 #"flip-horiz"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 14 3 5 #"below"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.44"
0 0 25 29 1 #"\n"
0 7         307 4           0 0           0 50 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 25 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 25 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 25 3 5 #")))))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.45"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"split"
0 0 25 3 1 #" "
0 0 14 3 11 #"large-split"
0 0 25 3 1 #" "
0 0 14 3 11 #"small-split"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"split-instance"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 14 3 7 #"painter"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 7 #"smaller"
0 0 25 3 2 #" ("
0 0 14 3 14 #"split-instance"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 11 #"large-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 11 #"small-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 25 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 14 #"split-instance"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 85
(
 #"; more complicated than need be because of order of definitions (bel"
 #"ow defined below)"
) 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"right-split"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 5 #"split"
0 0 25 3 1 #" "
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 5 #"below"
0 0 25 3 5 #"))) ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"up-split"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 5 #"split"
0 0 25 3 1 #" "
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 6 #"beside"
0 0 25 3 5 #"))) ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.46"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 74
(
 #";Most of this is boxed out because the SICP module has its own defin"
 #"itions"
) 0 0 25 29 1 #"\n"
0 0 18 3 15 #";and namespaces"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 5 #"; The"
0 0 18 3 1 #" "
0 0 18 3 6 #"Racket"
0 0 18 3 1 #" "
0 0 18 3 5 #"impl."
0 0 18 3 1 #" "
0 0 18 3 2 #"of"
0 0 18 3 1 #" "
0 0 18 3 3 #"the"
0 0 18 3 1 #" "
0 0 18 3 7 #"picture"
0 0 18 3 1 #" "
0 0 18 3 23 #"language uses the names"
0 0 25 29 1 #"\n"
0 0 18 3 11 #"; make-vect"
0 0 18 3 1 #","
0 0 18 3 1 #" "
0 0 18 3 11 #"vector-xcor"
0 0 18 3 1 #","
0 0 18 3 14 #" vector-ycor, "
0 0 25 29 1 #"\n"
0 0 18 3 12 #"; vector-add"
0 0 18 3 1 #","
0 0 18 3 26 #" vector-sub, vector-scale."
0 0 25 29 1 #"\n"
0 7         673 4           0 0           0 111 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"vector-xcor"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"vector-ycor"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-add"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-vect"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"vector-xcor"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 11 #"vector-ycor"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"vector-xcor"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 11 #"vector-ycor"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"vector-sub"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 10 #"vector-add"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 12 #"vector-scale"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"vector-scale"
0 0 25 3 1 #" "
0 0 14 3 6 #"factor"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"make-vect"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 11 #"vector-xcor"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 6 #"factor"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 11 #"vector-ycor"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #") "
0 0 14 3 6 #"factor"
0 0 25 3 3 #")))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.47"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 55 #"; Racket impl makes frames with some weird data type I "
0 0 25 29 1 #"\n"
0 0 18 3 7 #"; haven"
0 0 18 3 1 #"'"
0 0 18 3 1 #"t"
0 0 18 3 1 #" "
0 0 18 3 7 #"learned"
0 0 18 3 1 #" "
0 0 18 3 5 #"about"
0 0 18 3 1 #","
0 0 18 3 14 #" so boxed out."
0 0 25 29 1 #"\n"
0 7         277 4           0 0           0 45 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-frame"
0 0 25 3 1 #" "
0 0 14 3 6 #"origin"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"origin"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"frame-origin"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"frame-edge1"
0 0 25 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"frame-edge2"
0 0 25 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 7         289 4           0 0           0 47 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"make-frame"
0 0 25 3 1 #" "
0 0 14 3 6 #"origin"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 6 #"origin"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge1"
0 0 25 3 1 #" "
0 0 14 3 5 #"edge2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"frame-origin"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"frame-edge1"
0 0 25 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"frame-edge2"
0 0 25 3 1 #" "
0 0 14 3 4 #"cddr"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.48"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 7         145 4           0 0           0 23 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"make-segment"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"start-segment"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"end-segment"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.49"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 22 #"frame-map-segment-list"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #" "
0 0 14 3 4 #"list"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 6 #"mapper"
0 0 25 3 2 #" ("
0 0 14 3 15 #"frame-coord-map"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 7 #"segment"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 6 #"mapper"
0 0 25 3 2 #" ("
0 0 14 3 13 #"segment-start"
0 0 25 3 1 #" "
0 0 14 3 7 #"segment"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 6 #"mapper"
0 0 25 3 2 #" ("
0 0 14 3 11 #"segment-end"
0 0 25 3 1 #" "
0 0 14 3 7 #"segment"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"         "
0 0 14 3 4 #"list"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"outline-frame"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"segments->painter"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 22 #"frame-map-segment-list"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 14 3 5 #"frame"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"x-frame"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"segments->painter"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 22 #"frame-map-segment-list"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 14 3 5 #"frame"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"diamond-frame"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"segments->painter"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 22 #"frame-map-segment-list"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 14 3 5 #"frame"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"butlast"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 7 #"reverse"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 7 #"reverse"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"xypath"
0 0 25 3 1 #" "
0 0 14 3 5 #"xlist"
0 0 25 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 6 #"xstart"
0 0 25 3 1 #" "
0 0 14 3 4 #"xend"
0 0 25 3 1 #" "
0 0 14 3 6 #"ystart"
0 0 25 3 1 #" "
0 0 14 3 4 #"yend"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 12 #"make-segment"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 14 3 6 #"xstart"
0 0 25 3 1 #" "
0 0 14 3 6 #"ystart"
0 0 25 3 3 #") ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 14 3 4 #"xend"
0 0 25 3 1 #" "
0 0 14 3 4 #"yend"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 7 #"butlast"
0 0 25 3 1 #" "
0 0 14 3 5 #"xlist"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"xlist"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 7 #"butlast"
0 0 25 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 25 3 3 #") ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 5 #"ylist"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"test-frame"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-frame"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 4 #"-0.2"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"wave"
0 0 25 3 1 #" "
0 0 18 3 42 #"; not gonna bother with the double outline"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"segments->painter"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"append"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"xypath"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.2"
0 0 25 3 1 #" "
0 0 22 3 3 #".35"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #".65"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.0"
0 0 25 3 2 #") "
0 0 18 3 5 #";arms"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 1 #" "
0 0 22 3 3 #".55"
0 0 25 3 1 #" "
0 0 22 3 3 #".65"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.6"
0 0 25 3 1 #" "
0 0 22 3 3 #".65"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"xypath"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.6"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 2 #") "
0 0 18 3 12 #"; head/torso"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #".75"
0 0 25 3 1 #" "
0 0 22 3 3 #".85"
0 0 25 3 1 #" "
0 0 22 3 3 #".95"
0 0 25 3 1 #" "
0 0 22 3 3 #".85"
0 0 25 3 1 #" "
0 0 22 3 3 #".75"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.6"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"xypath"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.3"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.7"
0 0 25 3 2 #") "
0 0 18 3 5 #";legs"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.0"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 15 #"; Exercise 2.50"
0 0 25 29 1 #"\n"
0 0 18 3 59
#"; note that transform-painter in Soegaard differs from the "
0 0 25 29 1 #"\n"
0 0 18 3 6 #"; book"
0 0 18 3 1 #" "
0 0 18 3 2 #"by"
0 0 18 3 1 #" "
0 0 18 3 11 #"abstracting"
0 0 18 3 1 #" "
0 0 18 3 3 #"out"
0 0 18 3 1 #" "
0 0 18 3 3 #"one"
0 0 18 3 1 #" "
0 0 18 3 9 #"more step"
0 0 25 29 1 #"\n"
0 0 18 3 34 #"; which makes it simpler, actually"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"flip-horiz"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"rotate-90"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.0"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"rotate-180"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"rotate-270"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 17 #"transform-painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";; Exercise 2.51"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 25 3 1 #" "
0 0 14 3 3 #"top"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"bottom-trans"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 17 #"transform-painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 9 #"top-trans"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 17 #"transform-painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.5"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 9 #"make-vect"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 12 #"bottom-trans"
0 0 25 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 25 3 2 #") "
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 9 #"top-trans"
0 0 25 3 1 #" "
0 0 14 3 3 #"top"
0 0 25 3 2 #") "
0 0 14 3 5 #"frame"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"below2"
0 0 25 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 25 3 1 #" "
0 0 14 3 3 #"top"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 9 #"rotate270"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 8 #"rotate90"
0 0 25 3 1 #" "
0 0 14 3 3 #"top"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 8 #"rotate90"
0 0 25 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";; Exercise 2.52"
0 0 25 29 1 #"\n"
0 0 18 3 3 #"; a"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"squarehead"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"wave"
0 0 25 3 1 #" "
0 0 14 3 5 #"frame"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    (("
0 0 14 3 17 #"segments->painter"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"xypath"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.6"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.6"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.4"
0 0 25 3 2 #") "
0 0 18 3 12 #"; head/torso"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 22 3 3 #".75"
0 0 25 3 1 #" "
0 0 22 3 3 #".75"
0 0 25 3 1 #" "
0 0 22 3 3 #".95"
0 0 25 3 1 #" "
0 0 22 3 3 #".95"
0 0 25 3 1 #" "
0 0 22 3 3 #".75"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 14 3 5 #"frame"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"corner-split2"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 2 #"up"
0 0 25 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 5 #"right"
0 0 25 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 6 #"corner"
0 0 25 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 2 #"up"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 5 #"right"
0 0 25 3 1 #" "
0 0 14 3 6 #"corner"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"square-limit2"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 7 #"quarter"
0 0 25 3 2 #" ("
0 0 14 3 13 #"corner-split2"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"half"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 10 #"flip-horiz"
0 0 25 3 1 #" "
0 0 14 3 7 #"quarter"
0 0 25 3 2 #") "
0 0 14 3 7 #"quarter"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"below"
0 0 25 3 2 #" ("
0 0 14 3 9 #"flip-vert"
0 0 25 3 1 #" "
0 0 14 3 4 #"half"
0 0 25 3 2 #") "
0 0 14 3 4 #"half"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"square-limit3"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 7 #"quarter"
0 0 25 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"half"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 7 #"quarter"
0 0 25 3 2 #" ("
0 0 14 3 10 #"flip-horiz"
0 0 25 3 1 #" "
0 0 14 3 7 #"quarter"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 4 #"half"
0 0 25 3 2 #" ("
0 0 14 3 9 #"flip-vert"
0 0 25 3 1 #" "
0 0 14 3 4 #"half"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"demo"
0 0 25 3 1 #" "
0 0 14 3 14 #"paint-function"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 5 #"\"orig"
0 0 20 3 3 #"\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 14 #"paint-function"
0 0 25 3 2 #" ("
0 0 14 3 12 #"square-limit"
0 0 25 3 1 #" "
0 0 14 3 4 #"wave"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 3 #"\"\\n"
0 0 20 3 1 #"\\"
0 0 20 3 5 #"nA\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 14 #"paint-function"
0 0 25 3 2 #" ("
0 0 14 3 12 #"square-limit"
0 0 25 3 1 #" "
0 0 14 3 10 #"squarehead"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 3 #"\"\\n"
0 0 20 3 6 #"\\nB\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 14 #"paint-function"
0 0 25 3 2 #" ("
0 0 14 3 13 #"square-limit2"
0 0 25 3 1 #" "
0 0 14 3 4 #"wave"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 9 #"\"\\n\\nB\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 14 #"paint-function"
0 0 25 3 2 #" ("
0 0 14 3 13 #"square-limit3"
0 0 25 3 1 #" "
0 0 14 3 4 #"wave"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 20 #";;; pasted from book"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"diag"
0 0 25 3 1 #" "
0 0 14 3 16 #"diagonal-shading"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"flipped-pairs"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"painter2"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 9 #"flip-vert"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 25 3 1 #" "
0 0 14 3 8 #"painter2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"      "
0 0 14 3 7 #"painter"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 2 #"up"
0 0 25 3 2 #" ("
0 0 14 3 8 #"up-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 5 #"right"
0 0 25 3 2 #" ("
0 0 14 3 11 #"right-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 8 #"top-left"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 1 #" "
0 0 14 3 2 #"up"
0 0 25 3 1 #" "
0 0 14 3 2 #"up"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 12 #"bottom-right"
0 0 25 3 2 #" ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 5 #"right"
0 0 25 3 1 #" "
0 0 14 3 5 #"right"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"corner"
0 0 25 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 8 #"top-left"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 5 #"below"
0 0 25 3 1 #" "
0 0 14 3 12 #"bottom-right"
0 0 25 3 1 #" "
0 0 14 3 6 #"corner"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"square-limit"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 7 #"quarter"
0 0 25 3 2 #" ("
0 0 14 3 12 #"corner-split"
0 0 25 3 1 #" "
0 0 14 3 7 #"painter"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 4 #"half"
0 0 25 3 2 #" ("
0 0 14 3 6 #"beside"
0 0 25 3 2 #" ("
0 0 14 3 10 #"flip-horiz"
0 0 25 3 1 #" "
0 0 14 3 7 #"quarter"
0 0 25 3 2 #") "
0 0 14 3 7 #"quarter"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"below"
0 0 25 3 2 #" ("
0 0 14 3 9 #"flip-vert"
0 0 25 3 1 #" "
0 0 14 3 4 #"half"
0 0 25 3 2 #") "
0 0 14 3 4 #"half"
0 0 25 3 4 #"))))"
0           0
