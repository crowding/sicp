#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 30 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 58 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 16 #"Source Code Pro\0"
0 17 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 251 162 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 251 162 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 84 191 233 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 84 191 233 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 147 175 101 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 147 175 101 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 212 207 211 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 212 207 211 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 2212 0 29 3 17 #"#lang planet neil"
0 0 29 3 5 #"/sicp"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 14 #";; Problem 2.1"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"make-rat"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"g"
0 0 25 3 2 #" ("
0 0 14 3 3 #"gcd"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 3 #") ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"d"
0 0 25 3 1 #" "
0 0 14 3 1 #"g"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 14 #";; Problem 2.2"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 12 #"make-segment"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 2 #") "
0 0 18 3 6 #"; x, y"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"start-segment"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"end-segment"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"make-point"
0 0 25 3 1 #" "
0 0 14 3 4 #"cons"
0 0 25 3 2 #") "
0 0 18 3 6 #"; x, y"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-point"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"y-point"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"print-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 3 #"\"(\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 7 #"x-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 3 #"\",\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 7 #"y-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 3 #"\")\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"midpoint-segment"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"make-point"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 7 #"average"
0 0 25 3 2 #" ("
0 0 14 3 7 #"x-point"
0 0 25 3 2 #" ("
0 0 14 3 13 #"start-segment"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"x-point"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-segment"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 7 #"average"
0 0 25 3 2 #" ("
0 0 14 3 7 #"y-point"
0 0 25 3 2 #" ("
0 0 14 3 13 #"start-segment"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 4 #")) ("
0 0 14 3 7 #"y-point"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-segment"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"average"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"problem-2-2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"print-point"
0 0 25 3 2 #" ("
0 0 14 3 16 #"midpoint-segment"
0 0 25 3 2 #" ("
0 0 14 3 12 #"make-segment"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-point"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 35 #"                                  ("
0 0 14 3 10 #"make-point"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 14 #";; Problem 2.3"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 41 #";one representation as a diagonal segment"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 14 3 10 #"bottomleft"
0 0 25 3 1 #" "
0 0 14 3 8 #"topright"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 12 #"make-segment"
0 0 25 3 1 #" "
0 0 14 3 10 #"bottomleft"
0 0 25 3 1 #" "
0 0 14 3 8 #"topright"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"rect-topright"
0 0 25 3 1 #" "
0 0 14 3 11 #"end-segment"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 15 #"rect-bottomleft"
0 0 25 3 1 #" "
0 0 14 3 13 #"start-segment"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rect-left"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 7 #"x-point"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rect-bottomleft"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-right"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 7 #"x-point"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rect-topright"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"rect-bottom"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 7 #"y-point"
0 0 25 3 2 #" ("
0 0 14 3 15 #"rect-bottomleft"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"rect-top"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 7 #"y-point"
0 0 25 3 2 #" ("
0 0 14 3 11 #"end-segment"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-right"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 9 #"rect-left"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 8 #"rect-top"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 11 #"rect-bottom"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 34 #";;another as center, width, height"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"center-rect"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-rect"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 6 #"height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"rect-center"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 3 #"car"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rect-accessor"
0 0 25 3 1 #" "
0 0 14 3 5 #"coord"
0 0 25 3 1 #" "
0 0 14 3 7 #"combine"
0 0 25 3 1 #" "
0 0 14 3 9 #"dimension"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 7 #"combine"
0 0 25 3 2 #" ("
0 0 14 3 5 #"coord"
0 0 25 3 2 #" ("
0 0 14 3 11 #"rect-center"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 29 #"                            ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 9 #"dimension"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 2 #") "
0 0 22 3 1 #"2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"rect-bottom"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rect-accessor"
0 0 25 3 1 #" "
0 0 14 3 7 #"y-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 11 #"rect-height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"rect-top"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rect-accessor"
0 0 25 3 1 #" "
0 0 14 3 7 #"y-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 11 #"rect-height"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 9 #"rect-left"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rect-accessor"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 10 #"rect-width"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"rect-right"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rect-accessor"
0 0 25 3 1 #" "
0 0 14 3 7 #"x-point"
0 0 25 3 1 #" "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 10 #"rect-width"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 14 3 3 #"nil"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #"; in either case"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 14 #"rect-perimiter"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rect-width"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 3 #") ("
0 0 14 3 11 #"rect-height"
0 0 25 3 1 #" "
0 0 14 3 4 #"rect"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Exercise 2.4"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 6 #"define"
0 0 18 3 2 #" ("
0 0 18 3 4 #"cons"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 2 #"y)"
0 0 25 29 1 #"\n"
0 0 18 3 4 #";  ("
0 0 18 3 6 #"lambda"
0 0 18 3 2 #" ("
0 0 18 3 1 #"m"
0 0 18 3 3 #") ("
0 0 18 3 1 #"m"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 4 #"y)))"
0 0 25 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 6 #"define"
0 0 18 3 2 #" ("
0 0 18 3 3 #"car"
0 0 18 3 1 #" "
0 0 18 3 2 #"z)"
0 0 25 29 1 #"\n"
0 0 18 3 4 #";  ("
0 0 18 3 1 #"z"
0 0 18 3 2 #" ("
0 0 18 3 6 #"lambda"
0 0 18 3 2 #" ("
0 0 18 3 1 #"p"
0 0 18 3 1 #" "
0 0 18 3 1 #"q"
0 0 18 3 2 #") "
0 0 18 3 4 #"p)))"
0 0 25 29 1 #"\n"
0 0 18 3 2 #";("
0 0 18 3 6 #"define"
0 0 18 3 2 #" ("
0 0 18 3 3 #"cdr"
0 0 18 3 1 #" "
0 0 18 3 3 #"z) "
0 0 25 29 1 #"\n"
0 0 18 3 4 #";  ("
0 0 18 3 1 #"z"
0 0 18 3 2 #" ("
0 0 18 3 6 #"lambda"
0 0 18 3 2 #" ("
0 0 18 3 1 #"p"
0 0 18 3 1 #" "
0 0 18 3 1 #"q"
0 0 18 3 2 #") "
0 0 18 3 4 #"q)))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Exercise 2.5"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"int-cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 4 #"expt"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"int-car"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #") ("
0 0 14 3 12 #"factor-count"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"int-cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 3 #") ("
0 0 14 3 12 #"factor-count"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"factor-count"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"iter"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #" ("
0 0 14 3 9 #"remainder"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"iter"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #" "
0 0 14 3 4 #"base"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"        "
0 0 14 3 1 #"i"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 4 #"iter"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Exercise 2.6"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"zero"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"add-1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"f"
0 0 25 3 3 #" (("
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 28 #"; using substitution i find:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"one"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"two"
0 0 25 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 1 #"f"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 58
#"; You see what is happening, if N is the Church numeral N,"
0 0 25 29 1 #"\n"
0 0 18 3 4 #"; (("
0 0 18 3 1 #"N"
0 0 18 3 1 #" "
0 0 18 3 1 #"f"
0 0 18 3 2 #") "
0 0 18 3 1 #"x"
0 0 18 3 2 #") "
0 0 18 3 7 #"applies"
0 0 18 3 1 #" "
0 0 18 3 1 #"f"
0 0 18 3 1 #" "
0 0 18 3 2 #"to"
0 0 18 3 1 #" "
0 0 18 3 1 #"x"
0 0 18 3 1 #" "
0 0 18 3 1 #"N"
0 0 18 3 6 #" times"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 33 #";; Then, addition is composition:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 8 #"+-church"
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"r"
0 0 25 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"f"
0 0 25 3 3 #") ("
0 0 16 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 39 #"                                     (("
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 4 #") (("
0 0 14 3 1 #"r"
0 0 25 3 1 #" "
0 0 14 3 1 #"f"
0 0 25 3 2 #") "
0 0 14 3 1 #"x"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 6 #"; And "
0 0 18 3 1 #"I"
0 0 18 3 1 #" "
0 0 18 3 3 #"can"
0 0 18 3 9 #" convert "
0 0 18 3 6 #"Church"
0 0 18 3 1 #" "
0 0 18 3 47 #"numerals to machine integers by feeding in inc:"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"church"
0 0 25 3 1 #" "
0 0 14 3 1 #"C"
0 0 25 3 4 #") (("
0 0 14 3 1 #"C"
0 0 25 3 1 #" "
0 0 14 3 3 #"inc"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 18 3 8 #";test: ("
0 0 18 3 6 #"church"
0 0 18 3 2 #" ("
0 0 18 3 8 #"+-church"
0 0 18 3 1 #" "
0 0 18 3 3 #"two"
0 0 18 3 1 #" "
0 0 18 3 5 #"two))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Exercise 2.7"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 13 #";or robustly:"
0 0 25 29 1 #"\n"
0 7         457 4           0 0           0 75 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"b"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Exercise 2.8"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 31 #";; Being \"analogous\" to Alyssa:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"sub-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";; Or being lazy"
0 0 25 29 1 #"\n"
0 7         265 4           0 0           0 43 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"sub-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"plus-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 12 #"neg-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"neg-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 41 #"                                        ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Exercise 2.9"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 53 #"; By substitution (ignoring the /2 for less clutter):"
0 0 25 29 1 #"\n"
0 7        1129 4           0 0           0 187 0 25 3 3 #"  ("
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 12 #"add-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 34 #"                                 ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"width"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 40 #"; This does not hold for multiplication:"
0 0 25 29 1 #"\n"
0 7         253 4           0 0           0 41 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 12 #"mul-interval"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 3 #") ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"2"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 5 #"width"
0 0 25 3 2 #" ("
0 0 14 3 12 #"mul-interval"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 3 #") ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 22 3 1 #"3"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.10"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sign"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 16 3 4 #"cond"
0 0 25 3 3 #" (("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"1"
0 0 25 3 4 #") (("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 2 #"-1"
0 0 25 3 3 #") ("
0 0 22 3 2 #"#t"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"div-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 4 #"sign"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #")) ("
0 0 14 3 4 #"sign"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 12 #"mul-interval"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"       "
0 0 14 3 1 #"x"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.0"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 1 #"/"
0 0 25 3 1 #" "
0 0 22 3 3 #"1.0"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 5 #"error"
0 0 25 3 1 #" "
0 0 20 3 30 #"\"Denominator interval spans 0\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 17 #";;; Exercise 2.11"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 18 #"brute-mul-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 2 #"p1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 2 #"p2"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 2 #"p3"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 2 #"p4"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 3 #"min"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #" "
0 0 14 3 2 #"p3"
0 0 25 3 1 #" "
0 0 14 3 2 #"p4"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 3 #"max"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #" "
0 0 14 3 2 #"p3"
0 0 25 3 1 #" "
0 0 14 3 2 #"p4"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"interval-sign"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"l"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sign"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))) "
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 1 #"u"
0 0 25 3 2 #" ("
0 0 14 3 4 #"sign"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 14 3 1 #"u"
0 0 25 3 2 #") "
0 0 14 3 1 #"l"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"mul-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 2 #"xl"
0 0 25 3 1 #" "
0 0 14 3 2 #"yl"
0 0 25 3 1 #" "
0 0 14 3 2 #"xu"
0 0 25 3 1 #" "
0 0 14 3 2 #"yu"
0 0 25 3 2 #") "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 2 #"xl"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 2 #"yl"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 2 #"xu"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 2 #"yu"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 16 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 1 #"c"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 13 #"interval-sign"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 13 #"interval-sign"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 16 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"-1"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"-1"
0 0 25 3 2 #"  "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"-1"
0 0 25 3 2 #"  "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"( "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"( "
0 0 22 3 1 #"0"
0 0 25 3 2 #"  "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 14 3 18 #"brute-mul-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"( "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"( "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 2 #"-1"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"( "
0 0 22 3 1 #"1"
0 0 25 3 2 #"  "
0 0 22 3 1 #"0"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 2 #"( "
0 0 22 3 1 #"1"
0 0 25 3 2 #"  "
0 0 22 3 1 #"1"
0 0 25 3 4 #")) ("
0 0 16 3 2 #"do"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"lower"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 1 #" "
0 0 14 3 5 #"upper"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";; Exercise 2.12"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-center-percent"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 7 #"percent"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 1 #" "
0 0 14 3 7 #"percent"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 1 #" "
0 0 14 3 7 #"percent"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 1 #" "
0 0 14 3 7 #"percent"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 6 #"center"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 1 #" "
0 0 14 3 7 #"percent"
0 0 25 3 2 #") "
0 0 22 3 3 #"100"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";; Exercise 2.13"
0 0 25 29 1 #"\n"
0 0 18 3 73
(
 #";; leaving off the factor of 100 for clarity, and assuming a, b, pos"
 #"itive"
) 0 0 25 29 1 #"\n"
0 7         715 4           0 0           0 118 0 25 3 1 #"("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #")) "
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 4 #")) ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 22 3 1 #"1"
0 0 25 3 3 #") ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 4 #"))) "
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"O"
0 0 25 3 1 #"("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 3 #") ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0           0 0 0 25 29 1 #"\n"
0 0 18 3 77
(
 #";; thus, if tolerances are small, tolerance percentages add when mul"
 #"tiplying."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";; Exercise 2.14"
0 0 25 29 1 #"\n"
0 0 18 3 45 #"; Demonstration with resistance calculations:"
0 0 25 29 1 #"\n"
0 7         847 4           0 0           0 140 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"r1"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-center-percent"
0 0 25 3 1 #" "
0 0 22 3 2 #"22"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"r2"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-center-percent"
0 0 25 3 1 #" "
0 0 22 3 3 #"470"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"r12a"
0 0 25 3 2 #" ("
0 0 14 3 12 #"div-interval"
0 0 25 3 2 #" ("
0 0 14 3 12 #"mul-interval"
0 0 25 3 1 #" "
0 0 14 3 2 #"r1"
0 0 25 3 1 #" "
0 0 14 3 2 #"r2"
0 0 25 3 3 #") ("
0 0 14 3 12 #"add-interval"
0 0 25 3 1 #" "
0 0 14 3 2 #"r1"
0 0 25 3 1 #" "
0 0 14 3 2 #"r2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 3 #"one"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"one-int"
0 0 25 3 2 #" ("
0 0 14 3 13 #"make-interval"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 4 #"r12b"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 12 #"div-interval"
0 0 25 3 1 #" "
0 0 14 3 7 #"one-int"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ("
0 0 14 3 12 #"add-interval"
0 0 25 3 2 #" ("
0 0 14 3 12 #"div-interval"
0 0 25 3 1 #" "
0 0 14 3 7 #"one-int"
0 0 25 3 1 #" "
0 0 14 3 2 #"r1"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 33 #"                                ("
0 0 14 3 12 #"div-interval"
0 0 25 3 1 #" "
0 0 14 3 7 #"one-int"
0 0 25 3 1 #" "
0 0 14 3 2 #"r2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 4 #"r12a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 17 #"21.22694948753999"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 4 #"r12b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 18 #"21.016260162601625"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 4 #"r12a"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 18 #"14.900744416873458"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 1 #" "
0 0 14 3 4 #"r12b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 22 3 17 #"5.000000000000017"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 88
(
 #"; A basic demonstration of what's happening is that a/a should be 1 "
 #"with a tolerance of "
) 0 0 25 29 1 #"\n"
0 0 18 3 3 #"; 0"
0 0 18 3 1 #","
0 0 18 3 1 #" "
0 0 18 3 3 #"but"
0 0 18 3 1 #" "
0 0 18 3 7 #"instead"
0 0 18 3 1 #" "
0 0 18 3 3 #"the"
0 0 18 3 1 #" "
0 0 18 3 9 #"tolerance"
0 0 18 3 9 #" doubles."
0 0 25 29 1 #"\n"
0 7         157 4           0 0           0 25 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 19 #"make-center-percent"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 7 #"percent"
0 0 25 3 2 #" ("
0 0 14 3 12 #"div-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 22 3 18 #"1.9998000199980077"
0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Problem 2.15"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 82
(
 #"; I would tend to agree; when a variable appears twice in a calculat"
 #"ion, interval "
) 0 0 25 29 1 #"\n"
0 0 18 3 12 #"; arithmetic"
0 0 18 3 1 #" "
0 0 18 3 5 #"might"
0 0 18 3 1 #" "
0 0 18 3 8 #"consider"
0 0 18 3 1 #" "
0 0 18 3 2 #"it"
0 0 18 3 1 #" "
0 0 18 3 2 #"to"
0 0 18 3 1 #" "
0 0 18 3 4 #"have"
0 0 18 3 1 #" "
0 0 18 3 3 #"the"
0 0 18 3 1 #" "
0 0 18 3 7 #"minimum"
0 0 18 3 1 #" "
0 0 18 3 2 #"in"
0 0 18 3 1 #" "
0 0 18 3 3 #"one"
0 0 18 3 1 #" "
0 0 18 3 8 #"instance"
0 0 18 3 1 #" "
0 0 18 3 3 #"and"
0 0 18 3 1 #" "
0 0 18 3 3 #"the"
0 0 18 3 1 #" "
0 0 18 3 8 #"maximum "
0 0 25 29 1 #"\n"
0 0 18 3 4 #"; in"
0 0 18 3 1 #" "
0 0 18 3 34 #"another; but they ought to covary."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 16 #";;; Problem 2.16"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 75
(
 #"; It would be very difficult. Con"
 #"sider the function y=x*x. If y=0\302\2611, then "
) 0 0 25 29 1 #"\n"
0 0 18 3 76
(
 #"; our multiplication algorithm gives the interval [-1,1] by looking "
 #"at each "
) 0 0 25 29 1 #"\n"
0 0 18 3 5 #"; end"
0 0 18 3 1 #" "
0 0 18 3 2 #"of"
0 0 18 3 5 #" the "
0 0 18 3 5 #"range"
0 0 18 3 1 #" "
0 0 18 3 3 #"for"
0 0 18 3 1 #" "
0 0 18 3 4 #"each"
0 0 18 3 1 #" "
0 0 18 3 8 #"instance"
0 0 18 3 1 #" "
0 0 18 3 2 #"of"
0 0 18 3 38 #" x. We could imagine \"fixing\" the two "
0 0 25 29 1 #"\n"
0 0 18 3 11 #"; instances"
0 0 18 3 1 #" "
0 0 18 3 2 #"of"
0 0 18 3 1 #" "
0 0 18 3 1 #"X"
0 0 18 3 1 #" "
0 0 18 3 8 #"together"
0 0 18 3 1 #","
0 0 18 3 1 #" "
0 0 18 3 3 #"but"
0 0 18 3 1 #" "
0 0 18 3 4 #"that"
0 0 18 3 42 #" means in turn that we can't look just at "
0 0 25 29 1 #"\n"
0 0 18 3 75
(
 #"; the bounds. The real range is y = [0,1], but y=0 is only satisfied"
 #" at x=0"
) 0 0 25 29 1 #"\n"
0 0 18 3 4 #"; --"
0 0 18 3 1 #" "
0 0 18 3 3 #"not"
0 0 18 3 1 #" "
0 0 18 3 2 #"at"
0 0 18 3 1 #" "
0 0 18 3 6 #"either"
0 0 18 3 1 #" "
0 0 18 3 3 #"end"
0 0 18 3 1 #" "
0 0 18 3 2 #"of"
0 0 18 3 52 #" the range of x. So finding tight bounds in general "
0 0 25 29 1 #"\n"
0 0 18 3 10 #"; requires"
0 0 18 3 1 #" "
0 0 18 3 7 #"finding"
0 0 18 3 1 #" "
0 0 18 3 3 #"the"
0 0 18 3 1 #" "
0 0 18 3 7 #"minimum"
0 0 18 3 1 #" "
0 0 18 3 3 #"of "
0 0 18 3 9 #"arbitrary"
0 0 18 3 11 #" functions."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 18 3 20 #";;; copied from text"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"add-interval"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"make-center-width"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 13 #"make-interval"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 14 3 1 #"c"
0 0 25 3 1 #" "
0 0 14 3 1 #"w"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 6 #"center"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 11 #"lower-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 3 #") ("
0 0 14 3 11 #"upper-bound"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 3 #")) "
0 0 22 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"add-rat"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"make-rat"
0 0 25 3 2 #" ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 3 #"car"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"sub-rat"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"make-rat"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"mul-rat"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"make-rat"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"div-rat"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 8 #"make-rat"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"equal-rat?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 1 #"*"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"y"
0 0 25 3 3 #") ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 16 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"print-rat"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 5 #"numer"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 20 3 1 #"\""
0 0 20 3 2 #"/\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"display"
0 0 25 3 2 #" ("
0 0 14 3 5 #"denom"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 3 #")))"
0           0
